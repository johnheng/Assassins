@using Assassins.Models;
@model Assassins.Models.AspNetUser

@{
    ViewBag.Title = "Edit";
}
@*@using (Html.BeginForm("ChangeDescription", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))*@
@using (Html.BeginForm("Edit", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit player profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        

        <div class="form-group">
            @Html.LabelFor(model => model.Family, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Family, new { htmlAttributes = new { @class = "form-control", @value = Model.Family } })
                @Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @value = Model.Description } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kills, new { htmlAttributes = new { @class = "form-control", @value = Model.Kills } })
                @Html.ValidationMessageFor(model => model.Kills, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @value = Model.Name } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Alive, new { htmlAttributes = new { @value = Model.Alive, @id = "aliveCheck" } })
                    @Html.ValidationMessageFor(model => model.Alive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GameID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GameID, new { htmlAttributes = new { @class = "form-control", @value = Model.GameID } })
                @Html.ValidationMessageFor(model => model.GameID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentTarget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var logic = new Assassins.Logic.LookupLogic();
                    var players = logic.GetPlayers();
                    players.Insert(0, new AspNetUser());
                    SelectListItem defaultItem = new SelectListItem() { Text = null, Value = null };
                    if(Model.CurrentTarget != null)
                    {
                        defaultItem.Text = logic.GetNameFromId(Model.CurrentTarget);
                        defaultItem.Value = Model.CurrentTarget;
                    }
                    @Html.DropDownListFor(model => model.CurrentTarget, new SelectList(players, "Id", "Name", defaultItem), htmlAttributes: new { @class = "form-control" });
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $("#aliveCheck").change(function()
    {
        if ($("#aliveCheck").is(":checked")) {
            $("#aliveCheck").val(true);
        }
        else {
            $("#aliveCheck").val(false);
        }
    })
</script>
<div>
    @Html.ActionLink("Back to List", "UserDetails")
</div>
