@using Assassins.Models
@model Event

@{
    var logic = new Assassins.Logic.LookupLogic();
    var players = logic.GetPlayers();
}
@using (Html.BeginForm("EditEvent", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.user, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    players.Insert(0, new AspNetUser());
                    SelectListItem defaultItem = new SelectListItem() { Text = null, Value = null };
                    if(Model.user != null)
                    {
                    defaultItem.Text = logic.GetNameFromId(Model.user);
                    defaultItem.Value = Model.user;
                    }
                    @Html.DropDownListFor(model => model.user, new SelectList(players, "Id", "Name", defaultItem), htmlAttributes: new { @class = "form-control" });
                }
                @Html.ValidationMessageFor(model => model.target, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.target, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    defaultItem = new SelectListItem() { Text = null, Value = null };
                    if(Model.target != null)
                    {
                    defaultItem.Text = logic.GetNameFromId(Model.target);
                    defaultItem.Value = Model.target;
                    }
                    @Html.DropDownListFor(model => model.target, new SelectList(players, "Id", "Name", defaultItem), htmlAttributes: new { @class = "form-control" });
                }
                @Html.ValidationMessageFor(model => model.target, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @value = Model.date } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control", @value = Model.type } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comment, new { htmlAttributes = new { @class = "form-control", @value = Model.comment } })
                @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gameid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gameid, new { htmlAttributes = new { @class = "form-control", @value = Model.gameid } })
                @Html.ValidationMessageFor(model => model.gameid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.photourl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.photourl, new { htmlAttributes = new { @class = "form-control", @value = Model.photourl } })
                @Html.ValidationMessageFor(model => model.photourl, "", new { @class = "text-danger" })
                <p class="help-block">Don't change this unless you know what you're doing!</p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "EventDetails")
</div>
